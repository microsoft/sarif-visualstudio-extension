<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/StacksStringResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/StacksStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <DataTemplate x:Key="StackCollectionTemplate">
        <ItemsControl IsTabStop="False"
                      ItemsSource="{Binding}"
                      ItemContainerStyle="{StaticResource ItemsControlContentPresenterStyle}"
                      Style="{StaticResource ItemsControlStyle}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel IsItemsHost="True"
                               Style="{StaticResource ItemPanelStyle}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <TreeView Style="{StaticResource TreeViewStyle}">
                            <TreeViewItem IsExpanded="True">
                                <TreeViewItem.Header>
                                    <TextBlock Text="{Binding Message}"
                                               Style="{StaticResource PanelHeader}" />
                                </TreeViewItem.Header>
                                <TreeViewItem>
                                    <TreeViewItem.Header>
                                        <ListView ItemsSource="{Binding}"
                                                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                                  Style="{StaticResource TreeViewItemListViewStyle}">
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListViewItem}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                <Border Style="{StaticResource ListViewItemBorderStyle}">
                                                                    <Border Name="InnerBorder"
                                                                            Style="{StaticResource ListViewItemInnerBorderStyle}">
                                                                        <Grid>
                                                                            <Rectangle Name="UpperHighlight"
                                                                                       Style="{StaticResource ListViewItemInnerBorderHighlightRectangleStyle}"/>
                                                                            <GridViewRowPresenter Grid.RowSpan="0"   
                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"   
                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </Grid>
                                                                    </Border>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="False">
                                                                        <Setter Property="Background"
                                                                                Value="Transparent" />
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}" />
                                                                        <Setter TargetName="UpperHighlight"
                                                                                Property="Visibility"
                                                                                Value="Visible" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter Property="Background"
                                                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverBackgroundGradientBrushKey}}" />
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverTextBrushKey}}" />
                                                                        <Setter TargetName="UpperHighlight"
                                                                                Property="Visibility"
                                                                                Value="Visible" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsSelected" Value="True">
                                                                        <Setter Property="Background"
                                                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabSelectedTabBrushKey}}" />
                                                                        <Setter Property="Foreground"
                                                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabSelectedTextBrushKey}}" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Message}"
                                                                    Header="{StaticResource Stacks_GridViewColumn_Header_Message_Text}"
                                                                    Width="Auto" />
                                                    <GridViewColumn Header="{StaticResource Stacks_GridViewColumn_Header_Location_Text}">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock>
                                                                    <InlineUIContainer>
                                                                        <TextBlock Visibility="{Binding Module, Converter={StaticResource StringToVisibilityConverter}}">
                                                                            <Run Text="{Binding Module, StringFormat={StaticResource Stacks_Frame_Module_Text_FormatString}}" />
                                                                        </TextBlock>
                                                                    </InlineUIContainer>
                                                                    <InlineUIContainer>
                                                                        <TextBlock Visibility="{Binding FullyQualifiedLogicalName, Converter={StaticResource StringToVisibilityConverter}}">
                                                                            <Run Text="{Binding FullyQualifiedLogicalName, StringFormat={StaticResource Stacks_Frame_FullyQualifiedLogicalName_Text_FormatString}}" />
                                                                        </TextBlock>
                                                                    </InlineUIContainer>
                                                                    <Run Text="{Binding FileName, Mode=OneWay}" />
                                                                    <InlineUIContainer>
                                                                        <TextBlock Visibility="{Binding Line, Converter={StaticResource Int32ToVisibilityConverter}}">
                                                                            <Run Text="{Binding Line, Mode=OneWay, StringFormat={StaticResource Stacks_Frame_Line_Text_FormatString}}" />
                                                                        </TextBlock>
                                                                    </InlineUIContainer>
                                                                    <InlineUIContainer>
                                                                        <TextBlock Visibility="{Binding Column, Converter={StaticResource Int32ToVisibilityConverter}}">
                                                                            <Run Text="{Binding Column, Mode=OneWay, StringFormat={StaticResource Stacks_Frame_Column_Text_FormatString}}" />
                                                                        </TextBlock>
                                                                    </InlineUIContainer>
                                                                </TextBlock>    
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </TreeViewItem.Header>
                                </TreeViewItem>
                            </TreeViewItem>
                        </TreeView>
                    </DockPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

</ResourceDictionary>