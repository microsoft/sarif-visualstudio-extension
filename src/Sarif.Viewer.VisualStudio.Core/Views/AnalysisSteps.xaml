<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:Microsoft.Sarif.Viewer.Views"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:controls="clr-namespace:Microsoft.Sarif.Viewer.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/AnalysisStepsStringResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/AnalysisStepsStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="AnalysisStepTemplate" x:Name="AnalysisStepTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition MinHeight="150" />
                <RowDefinition Height="5"/>
                <RowDefinition Height="150" MinHeight="50" />
            </Grid.RowDefinitions>
            <ToolBarTray Grid.Row="0"
                             Style="{StaticResource ToolBarTrayStyle}">
                <ToolBar ToolBarTray.IsLocked="True"
                             KeyboardNavigation.TabNavigation="Continue"
                             Style="{StaticResource ToolBarStyle}">
                    <ToolBar.Template>
                        <ControlTemplate TargetType="ToolBar">
                            <Grid x:Name="ToolBarGrid" Style="{StaticResource ToolBarGridStyle}">
                                <Border x:Name="MainPanelBorder" Style="{StaticResource ToolbarMainPanelBorderStyle}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" Style="{StaticResource ToolBarHeaderContentPresenterStyle}"/>
                                        <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Style="{StaticResource ToolBarPanelStyle}"/>
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToolBar.Template>
                    <Button x:Name="ToolBarButtonExpand"
                                Command="{Binding ExpandAllCommand}"
                                ToolTip="{StaticResource AnalysisSteps_ToolBarButtonExpand_ToolTip_String}"
                                Style="{StaticResource ToolBarGlyphButtonStyle}">
                        <TextBlock Text="+"
                                       Style="{StaticResource ToolBarGlyphButtonTextStyle}"/>
                    </Button>
                    <Button x:Name="ToolBarButtonCollapse"
                                Command="{Binding CollapseAllCommand}"
                                ToolTip="{StaticResource AnalysisSteps_ToolBarButtonCollapse_ToolTip_String}"
                                Style="{StaticResource ToolBarGlyphButtonStyle}">
                        <TextBlock Text="-"
                                       Style="{StaticResource ToolBarGlyphButtonTextStyle}"/>
                    </Button>
                    <Button x:Name="ToolBarButtonIntelligentExpand"
                                Command="{Binding IntelligentExpandCommand}"
                                ToolTip="{StaticResource AnalysisSteps_ToolBarButtonIntelligentExpand_ToolTip_String}"
                                Style="{StaticResource ToolBarGlyphButtonStyle}">
                        <TextBlock Text="±"
                                       Style="{StaticResource ToolBarGlyphButtonTextStyle}"/>
                    </Button>
                    <Separator Style="{StaticResource ToolBarSeparatorStyle}" />
                    <Slider x:Name="ToolBarSlider"
                                Style="{StaticResource ToolBarSliderStyle}"/>
                </ToolBar>
            </ToolBarTray>
            <ItemsControl Grid.Row="1" ItemsSource="{Binding}" IsTabStop="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel IsItemsHost="True" LastChildFill="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <views:AnalysisStepView
                            ItemsSource="{Binding TopLevelNodes}"
                            KeyboardNavigation.TabNavigation="Continue"
                            ItemContainerStyle="{StaticResource TreeViewItemContainerStyle}"
                            Style="{StaticResource TreeViewStyle}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="x:Type local:AnalysisStepNode" ItemsSource="{Binding Children}">
                                    <Grid ToolTip="{Binding Location.Kinds, Converter={StaticResource CollectionToJoinedStringConverter}, ConverterParameter=', '}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition MinWidth="400" />
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick"
                                                                Command="{Binding NavigateCommand}"/>
                                        </Grid.InputBindings>
                                        <TextBlock Grid.Column="0"
                                                        Text="{Binding Index, Mode=OneWay}"
                                                        Style="{StaticResource AnalysisStepLocationTextStyle}" />
                                        <controls:BindableTextBlock Grid.Column="1"
                                            InlineList="{Binding MessageInlines}"
                                            Style="{StaticResource AnalysisStepMessageTextStyle}"/>
                                        <TextBlock Grid.Column="2"
                                                        Text="{Binding LocationDisplayString, Mode=OneWay}"
                                                        Style="{StaticResource AnalysisStepLocationTextStyle}" />
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.InputBindings>
                                <KeyBinding Command="{Binding SelectPreviousCommand}"
                                            Gesture="CTRL+ALT+SHIFT+F8"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" />
                                <KeyBinding Command="{Binding SelectNextCommand}"
                                            Gesture="CTRL+ALT+SHIFT+F9"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" />
                            </TreeView.InputBindings>
                        </views:AnalysisStepView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <GridSplitter Grid.Row="2" ResizeDirection="Rows" Background="{DynamicResource {x:Static vs_shell:HeaderColors.DefaultBrushKey}}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                      ResizeBehavior="PreviousAndNext" />
            <ListView Grid.Row="3"
                    ItemsSource="{Binding SelectedItem.State}"
                    Style="{StaticResource StackFrameListViewStyle}"
                    MinHeight="100"
                    BorderThickness="0.5">
                <ListView.Resources>
                    <Style TargetType="GridViewColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border Name="GridViewHeaderBorder"
                                            Style="{StaticResource GridViewHeaderBorderStyle}">
                                            <ContentPresenter Name="HeaderContent"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            RecognizesAccessKey="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            TextElement.Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextActiveBrushKey}}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            Style="{StaticResource GridViewHeaderBorderPresenterStyle}"/>
                                        </Border>
                                        <Thumb x:Name="PART_HeaderGripper"
                                            Style="{StaticResource GridViewColumnHeaderGripperStyle}" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="GridViewHeaderBorder"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static vs_shell:HeaderColors.MouseOverBrushKey}}"/>
                                            <Setter TargetName="HeaderContent"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextHoverBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
                        <Setter Property="Padding" Value="14" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border SnapsToDevicePixels="True"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="0"
                                        Padding="0,3,0,2">
                                        <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="11" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <GridViewRowPresenter Grid.RowSpan="2" 
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemActiveBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
                                        </Trigger>

                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemInactiveBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemInactiveTextBrushKey}}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=ValueChanged}" Value="True">
                                <Setter Property="Foreground" Value="Orange" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="27">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox
                                    IsChecked="{Binding Selected}"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.StateCheckedCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Self}}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Expression"
                                    DisplayMemberBinding="{Binding Expression}"
                                    Width="120" />
                        <GridViewColumn Header="Value"
                                    DisplayMemberBinding="{Binding NormalizedValue}"
                                    Width="250" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </DataTemplate>
</ResourceDictionary>