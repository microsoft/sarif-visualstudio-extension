<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
                    xmlns:local="clr-namespace:Microsoft.Sarif.Viewer.Models">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/LocationsStringResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/LocationsStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Location and Related Location Template -->
    <DataTemplate x:Key="CodeLocationCollectionTemplate">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TreeView Grid.Row="1"
                      Visibility="{Binding Locations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                      Style="{StaticResource LocationsTreeViewStyle}">
                <TreeViewItem Style="{StaticResource TreeViewItemStyle}">
                    <TreeViewItem.Header>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Text="{StaticResource Locations_TreeViewItem_Header_Label_Text_String}" 
                                       Style="{StaticResource PanelHeader}"/>
                            <TextBlock DockPanel.Dock="Left"
                                       Visibility="{Binding Locations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                       Style="{StaticResource LocationCountTextStyle}">
                                <Run Text="{Binding Locations.Count, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Count_Text_FormatString}}"/>
                            </TextBlock>
                        </DockPanel>
                    </TreeViewItem.Header>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <DockPanel>
                                <ListBox ItemsSource="{Binding Locations}"
                                         SelectedItem="{Binding Locations.SelectedItem, Mode=TwoWay}"
                                         ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                                         Style="{StaticResource TreeViewItemListBoxStyle}">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <DockPanel IsItemsHost="True"
                                                       Style="{StaticResource ListBoxItemPanelStyle}" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel Style="{StaticResource ListBoxItemWrapPanelStyle}">
                                                <WrapPanel.InputBindings>
                                                    <MouseBinding Gesture="LeftClick"
                                                                  Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                                  CommandParameter="{Binding}" />
                                                </WrapPanel.InputBindings>
                                                <WrapPanel.ToolTip>
                                                    <WrapPanel Style="{StaticResource ListBoxItemWrapPanelStyle}">
                                                        <TextBlock>
                                                            <Run Text="{Binding FilePath, Mode=OneWay}" />
                                                        </TextBlock>
                                                        <TextBlock Visibility="{Binding Region.StartLine, Converter={StaticResource Int32ToVisibilityConverter}}"
                                                                   Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
                                                            <Run Text="{Binding Region.StartLine, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartLine_Text_FormatString}}" />
                                                        </TextBlock>
                                                        <TextBlock Visibility="{Binding Region.StartColumn, Converter={StaticResource Int32ToVisibilityConverter}}"
                                                                   Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
                                                            <Run Text="{Binding Region.StartColumn, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartColumn_Text_FormatString}}" />
                                                        </TextBlock>
                                                    </WrapPanel>
                                                </WrapPanel.ToolTip>
                                                <TextBlock Style="{StaticResource LocationTextBaseStyle}">
                                                    <Run Text="{Binding FileName, Mode=OneWay}" />
                                                </TextBlock>
                                                <TextBlock Visibility="{Binding RegionDisplayString, Converter={StaticResource StringToVisibilityConverter}}"
                                                           Style="{StaticResource LocationTextStyle}">
                                                    <Run Text="{Binding RegionDisplayString, Mode=OneWay}" />
                                                </TextBlock>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                </TreeViewItem>
            </TreeView>

            <Separator Grid.Row="2"
                       Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                       Style="{StaticResource SectionSeparatorStyle}"/>

            <TreeView Grid.Row="3"
                      HorizontalAlignment="Stretch"
                      ScrollViewer.CanContentScroll="False"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                      Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                      Style="{StaticResource TreeViewStyleBase}">
                <TreeViewItem Style="{StaticResource TreeViewItemStyle}">
                    <TreeViewItem.Header>
                        <DockPanel>
                            <TextBlock Text="Related Locations"
                                       Style="{StaticResource RelatedLocationsTreeViewItemHeaderTextStyle}" />
                            <TextBlock Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                       Style="{StaticResource RelatedLocationsTreeViewItemHeaderTextStyle}">
                                <Run Text="{Binding RelatedLocations.Count, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Count_Text_FormatString}}" />
                            </TextBlock>
                        </DockPanel>
                    </TreeViewItem.Header>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <DockPanel LastChildFill="True" Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}">
                                <TreeView x:Name="ContextTree"
                                          Background="Transparent"
                                          BorderThickness="0"
                                          ItemsSource="{Binding RelatedLocationsTreeNodes, Mode=OneTime}"
                                          HorizontalAlignment="Stretch"
                                          ScrollViewer.CanContentScroll="False"
                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                          ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                    <TreeView.Resources>
                                        <!-- Renders the hierarchy adapter type. -->
                                        <HierarchicalDataTemplate DataType="{x:Type local:LocationTreeNode}"
                                                                  ItemsSource="{Binding Children, Mode=OneTime}">
                                            <TextBlock Text="{Binding Location.Message}"
                                                        TextWrapping="Wrap"
                                                        Margin="-5,0,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"/>
                                            <!--
                                            <Grid Margin="-20,0,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="200"></ColumnDefinition>
                                                    <ColumnDefinition Width="Auto" MinWidth="50"></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Location.Message}"
                                                           TextTrimming="CharacterEllipsis"
                                                           Margin="10,0,0,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Grid.Column="0"/>
                                                <TextBlock Text="{Binding Location.LocationDisplayString}"
                                                           Margin="10,0,10,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Grid.Column="1"/>
                                            </Grid>
                                            -->
                                        </HierarchicalDataTemplate>
                                        <!-- The default expander shapes from MSDN. -->
                                        <Style x:Key="ExpandCollapseToggleStyle"
                                               TargetType="ToggleButton">
                                            <Setter Property="Focusable"
                                                    Value="False"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Width="15"
                                                              Height="13"
                                                              Background="Transparent">
                                                            <Path x:Name="ExpandPath"
                                                                  HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"
                                                                  Margin="1,1,1,1"
                                                                  Fill="{TemplateBinding Background}"
                                                                  Data="M 4 0 L 8 4 L 4 8 Z"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsChecked"
                                                                     Value="True">
                                                                <Setter Property="Data"
                                                                        TargetName="ExpandPath"
                                                                        Value="M 0 4 L 8 4 L 4 8 Z"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TreeView.Resources>
                                    <TreeView.Template>
                                        <ControlTemplate>
                                            <!-- This prevents the control from eating scroll events. -->
                                            <ItemsPresenter x:Name="ItemsPresenter"/>
                                        </ControlTemplate>
                                    </TreeView.Template>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemTextBrushKey}}" />
                                            <!-- Default tree view template from MSDN. -->
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                        <Grid Margin="1">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <ToggleButton x:Name="Expander"
                                                                          Style="{StaticResource ExpandCollapseToggleStyle}"
                                                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                          ClickMode="Press"
                                                                          Background="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemGlyphBrushKey}}"/>
                                                            <Border Name="ItemPanel" 
                                                                    Grid.Column="1"
                                                                    Grid.ColumnSpan="2"
                                                                    BorderBrush="Transparent"
                                                                    BorderThickness="1"
                                                                    CornerRadius="2"
                                                                    Background="{TemplateBinding Background}">
                                                                <ContentPresenter x:Name="PART_Header"
                                                                                  ContentSource="Header"
                                                                                  Margin="5,1,5,1"
                                                                                  HorizontalAlignment="Stretch"/>
                                                            </Border>
                                                            <ItemsPresenter x:Name="ItemContent" 
                                                                            Grid.Row="1"
                                                                            Grid.Column="1"
                                                                            Grid.ColumnSpan="2"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsExpanded"
                                                                     Value="false">
                                                                <Setter TargetName="ItemContent"
                                                                        Property="Visibility"
                                                                        Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="HasItems"
                                                                     Value="false">
                                                                <Setter TargetName="Expander"
                                                                        Property="Visibility"
                                                                        Value="Hidden"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="true"
                                                                     SourceName="ItemPanel">
                                                                <Setter TargetName="ItemPanel"
                                                                        Property="Background"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemBackgroundHoverBrushKey}}"/>
                                                                <Setter TargetName="ItemPanel"
                                                                        Property="BorderBrush"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemBorderHoverBrushKey}}"/>
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemTextHoverBrushKey}}"/>
                                                                <Setter Property="Cursor"
                                                                        Value="Hand"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected"
                                                                               Value="true"/>
                                                                    <Condition Property="IsFocused"
                                                                               Value="true"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="ItemPanel"
                                                                        Property="Background"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemBackgroundSelectedBrushKey}}"/>
                                                                <Setter TargetName="ItemPanel"
                                                                        Property="BorderBrush"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemBorderSelectedBrushKey}}"/>
                                                                <Setter Property="Foreground"
                                                                        Value="{DynamicResource {x:Static vs_shell:CommonDocumentColors.ListItemTextSelectedBrushKey}}"/>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                </TreeView>
                            </DockPanel>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                </TreeViewItem>
            </TreeView>

        </Grid>

    </DataTemplate>

</ResourceDictionary>
