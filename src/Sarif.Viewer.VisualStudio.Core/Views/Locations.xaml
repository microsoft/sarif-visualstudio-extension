<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/LocationsStringResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/LocationsStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Related Location GridView Location Cell Template -->
    <DataTemplate x:Key="RelatedLocationLocationCellTemplate">
        <TextBlock Text="{Binding LocationDisplayString, Mode=OneWay}"
                   Style="{StaticResource LocationTextStyle}">
            <TextBlock.ToolTip>
                <StackPanel Style="{StaticResource ListViewItemStackPanelStyle}">
                    <TextBlock>
					    <Run Text="{Binding FilePath, Mode=OneWay}" />
                    </TextBlock>
                    <TextBlock Visibility="{Binding Region.StartLine, Converter={StaticResource Int32ToVisibilityConverter}}"
                               Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
                        <Run Text="{Binding Region.StartLine, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartLine_Text_FormatString}}" />
                    </TextBlock>
                    <TextBlock Visibility="{Binding Region.StartColumn, Converter={StaticResource Int32ToVisibilityConverter}}"
                               Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
						<Run Text="{Binding Region.StartColumn, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartColumn_Text_FormatString}}" />
                    </TextBlock>
                </StackPanel>                    
            </TextBlock.ToolTip>
        </TextBlock>
    </DataTemplate>

    <!-- Related Location GridView Message Cell Template -->
    <DataTemplate x:Key="RelatedLocationMessageCellTemplate">
        <WrapPanel Style="{StaticResource ListViewItemWrapPanelStyle}">
            <WrapPanel.InputBindings>
                <MouseBinding Gesture="LeftClick"
                              Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                              CommandParameter="{Binding}" />
            </WrapPanel.InputBindings>
            <WrapPanel.ToolTip>
                <WrapPanel Style="{StaticResource ListViewItemWrapPanelStyle}">
                    <TextBlock Visibility="{Binding Message, Converter={StaticResource StringToVisibilityConverter}}">
						<Run Text="{Binding Message, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Message_FormatString}}" />
                    </TextBlock>
                </WrapPanel>
            </WrapPanel.ToolTip>
            <TextBlock Visibility="{Binding Message, Converter={StaticResource StringToVisibilityConverter}}"
                       Margin="{Binding NestingLevel, Converter={StaticResource NestingLevelToMarginConverter}, ConverterParameter=20}"
                       TextWrapping="Wrap"
                       Style="{StaticResource LocationTextStyleNoMargin}">
				<Run Text="{Binding Message, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Message_FormatString}}" />
            </TextBlock>
        </WrapPanel>
    </DataTemplate>

    <!-- Location and Related Location Template -->
    <DataTemplate x:Key="CodeLocationCollectionTemplate">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TreeView Grid.Row="1"
                      Visibility="{Binding Locations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                      Style="{StaticResource LocationsTreeViewStyle}">
                <TreeViewItem Style="{StaticResource TreeViewItemStyle}">
                    <TreeViewItem.Header>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left"
                                       Text="{StaticResource Locations_TreeViewItem_Header_Label_Text_String}" 
                                       Style="{StaticResource PanelHeader}"/>
                            <TextBlock DockPanel.Dock="Left"
                                       Visibility="{Binding Locations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                       Style="{StaticResource LocationCountTextStyle}">
                                <Run Text="{Binding Locations.Count, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Count_Text_FormatString}}"/>
                            </TextBlock>
                        </DockPanel>
                    </TreeViewItem.Header>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <DockPanel>
                                <ListBox ItemsSource="{Binding Locations}"
                                         SelectedItem="{Binding Locations.SelectedItem, Mode=TwoWay}"
                                         ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                                         Style="{StaticResource TreeViewItemListBoxStyle}">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <DockPanel IsItemsHost="True"
                                                       Style="{StaticResource ListBoxItemPanelStyle}" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <WrapPanel Style="{StaticResource ListBoxItemWrapPanelStyle}">
                                                <WrapPanel.InputBindings>
                                                    <MouseBinding Gesture="LeftClick"
                                                                  Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                                  CommandParameter="{Binding}" />
                                                </WrapPanel.InputBindings>
                                                <WrapPanel.ToolTip>
                                                    <WrapPanel Style="{StaticResource ListBoxItemWrapPanelStyle}">
                                                        <TextBlock>
                                                            <Run Text="{Binding FilePath, Mode=OneWay}" />
                                                        </TextBlock>
                                                        <TextBlock Visibility="{Binding Region.StartLine, Converter={StaticResource Int32ToVisibilityConverter}}"
                                                                   Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
                                                            <Run Text="{Binding Region.StartLine, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartLine_Text_FormatString}}" />
                                                        </TextBlock>
                                                        <TextBlock Visibility="{Binding Region.StartColumn, Converter={StaticResource Int32ToVisibilityConverter}}"
                                                                   Style="{StaticResource ListBoxItemToolTipRegionTextStyle}">
                                                            <Run Text="{Binding Region.StartColumn, Mode=OneWay, StringFormat={StaticResource Locations_ListBoxItem_ToolTip_RegionStartColumn_Text_FormatString}}" />
                                                        </TextBlock>
                                                    </WrapPanel>
                                                </WrapPanel.ToolTip>
                                                <TextBlock Style="{StaticResource LocationTextBaseStyle}">
                                                    <Run Text="{Binding FileName, Mode=OneWay}" />
                                                </TextBlock>
                                                <TextBlock Visibility="{Binding RegionDisplayString, Converter={StaticResource StringToVisibilityConverter}}"
                                                           Style="{StaticResource LocationTextStyle}">
                                                    <Run Text="{Binding RegionDisplayString, Mode=OneWay}" />
                                                </TextBlock>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </DockPanel>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                </TreeViewItem>
            </TreeView>

            <Separator Grid.Row="2"
                       Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                       Style="{StaticResource SectionSeparatorStyle}"/>
            
            <TreeView Grid.Row="3"
                      Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                      Style="{StaticResource TreeViewStyleBase}">
                <TreeViewItem Style="{StaticResource TreeViewItemStyle}">
                    <TreeViewItem.Header>
                        <DockPanel>
                            <TextBlock Text="Related Locations"
                                       Style="{StaticResource RelatedLocationsTreeViewItemHeaderTextStyle}" />
                            <TextBlock Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                       Style="{StaticResource RelatedLocationsTreeViewItemHeaderTextStyle}">
                                <Run Text="{Binding RelatedLocations.Count, Mode=OneWay, StringFormat={StaticResource Locations_TreeViewItem_Header_Count_Text_FormatString}}" />
                            </TextBlock>
                        </DockPanel>
                    </TreeViewItem.Header>
                    <TreeViewItem>
                        <TreeViewItem.Header>
                            <ListView ItemsSource="{Binding RelatedLocations}"
                                      Visibility="{Binding RelatedLocations, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}"
                                      Style="{StaticResource RelatedLocationListViewStyle}">
                                <ListView.Resources>
                                    <Style TargetType="GridViewColumnHeader">
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="GridViewColumnHeader">
                                                    <Grid>
                                                        <Border Name="GridViewHeaderBorder"
                                                                Style="{StaticResource GridViewHeaderBorderStyle}">
                                                            <ContentPresenter Name="HeaderContent"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              RecognizesAccessKey="True"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                              TextElement.Foreground="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextActiveBrushKey}}"
                                                                              TextElement.FontWeight="SemiBold"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              Style="{StaticResource GridViewHeaderBorderPresenterStyle}"/>
                                                        </Border>
                                                        <Thumb x:Name="PART_HeaderGripper"
                                                               Style="{StaticResource GridViewColumnHeaderGripperStyle}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="GridViewHeaderBorder"
                                                                    Property="Background"
                                                                    Value="{DynamicResource {x:Static vs_shell:HeaderColors.MouseOverBrushKey}}"/>
                                                            <Setter TargetName="HeaderContent"
                                                                    Property="TextElement.Foreground"
                                                                    Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextHoverBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.CommandBarTextActiveBrushKey}}" />
                                        <Setter Property="Padding" Value="14" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <Border SnapsToDevicePixels="True"
                                                            Background="{TemplateBinding Background}"
                                                            CornerRadius="0"
                                                            Padding="0,3,0,2">
                                                        <Border Name="InnerBorder"
                                                                CornerRadius="0"
                                                                BorderThickness="0">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition MaxHeight="11" />
                                                                    <RowDefinition />
                                                                </Grid.RowDefinitions>
                                                                <GridViewRowPresenter Grid.RowSpan="2"
                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <Grid.InputBindings>
                                                                    <MouseBinding Gesture="LeftDoubleClick"
                                                                                  Command="{Binding NavigateCommand}"/>
                                                                </Grid.InputBindings>
                                                            </Grid>
                                                        </Border>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent" />
                                                        </Trigger>

                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemActiveBrushKey}}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
                                                        </Trigger>

                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="True" />
                                                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                                            </MultiTrigger.Conditions>

                                                            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemInactiveBrushKey}}" />
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:TreeViewColors.SelectedItemInactiveTextBrushKey}}" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.Resources>
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridViewColumn Header="Location"
                                                        CellTemplate="{StaticResource RelatedLocationLocationCellTemplate}"
                                                        Width="100" />
                                        <GridViewColumn Header="Message"
                                                        CellTemplate="{StaticResource RelatedLocationMessageCellTemplate}"
                                                        Width="250" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </TreeViewItem.Header>
                    </TreeViewItem>
                </TreeViewItem>
            </TreeView>

        </Grid>

    </DataTemplate>

</ResourceDictionary>
