<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Microsoft.Sarif.Viewer.Converters"
                    xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0">

    <!-- Converters -->
    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisiblityConverter" />
    <converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converters:Int32ToVisibilityConverter x:Key="Int32ToVisibilityConverter" />
    <converters:CollectionToBooleanConverter x:Key="CollectionToBooleanConverter" />
    <converters:CollectionToCountConverter x:Key="CollectionToCountConverter" />
    <converters:CollectionToVisibilityConverter x:Key="CollectionToVisibilityConverter" />
    <converters:MultipleStringsToVisibilityConverter x:Key="MultipleStringsToVisibilityConverter" />
    <converters:FileExistsToBooleanConverter x:Key="FileExistsToBooleanConverter" />

    <!-- Default Styles-->
    <Style TargetType="{x:Type Control}"
           x:Key="BaseStyle">
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="FontSize"
                Value="11.5" />
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseStyle}"></Style>
    <Style TargetType="{x:Type Label}"
           BasedOn="{StaticResource BaseStyle}"></Style>
    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource BaseStyle}"></Style>
    <Style TargetType="{x:Type ListView}"
           BasedOn="{StaticResource BaseStyle}"></Style>

    <Style TargetType="TextBlock"
           x:Key="BaseTextBlockStyle">
        <Setter Property="FontFamily"
                Value="Segoe UI" />
        <Setter Property="FontSize"
                Value="11.5" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="PanelHeader">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="PropertyKey"
           BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
        <Setter Property="Margin"
                Value="0 0 10 0" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="PropertyValue"
           BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}" />
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Black"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabGradientBrushKey}}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabTextBrushKey}}" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
    </Style>
    
    <Style TargetType="Hyperlink"
           x:Key="RuleHyperlinkStyle">
        <!-- Style when hyperlink is enabled. -->
        <Setter Property="TextDecorations"
                Value="None" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ScrollBarArrowGlyphPressedBrushKey}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ScrollBarArrowGlyphMouseOverBrushKey}}" />
                <Setter Property="TextDecorations"
                        Value="underline" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <!-- Style when hyperlink is disabled. -->
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolboxDisabledContentTextBrushKey}}" />
                <Setter Property="TextBlock.TextDecorations"
                        Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FocusOutline">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
